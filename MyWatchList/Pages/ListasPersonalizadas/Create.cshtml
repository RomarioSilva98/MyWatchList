@page
@model MyWatchList.Pages.ListasPersonalizadas.CreateModel
@{
    ViewData["Title"] = "Nova Lista";
}

<div class="form-container">
    <h2>➕ Criar Lista Personalizada</h2>
    <form method="post">
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="ListaPersonalizada.Nome"></label>
            <input asp-for="ListaPersonalizada.Nome" class="form-control" />
        </div>

        <div class="form-group">
            <label asp-for="ListaPersonalizada.Descricao"></label>
            <input asp-for="ListaPersonalizada.Descricao" class="form-control" />
        </div>

        <hr />
        <h5>Adicionar Obras à Lista</h5>
        <input type="text" id="searchInput" class="form-control" placeholder="Digite parte do nome da obra..." oninput="filterObras()" />

        <select id="obraSelect" class="form-control mt-2">
            @foreach (var obra in Model.TodasObras)
            {
                <option value="@obra.Id">@obra.Titulo</option>
            }
        </select>

        <button type="button" class="btn btn-info mt-2" onclick="addObra()">Adicionar Obra</button>

        <ul id="obrasAdicionadas" class="mt-3"></ul>


        <input type="hidden" name="ObraIds" id="obraIdsInput" />


        <button type="submit" class="btn btn-success w-100 mt-4">Criar Lista</button>
    </form>
</div>

@section Scripts {
    <script>
        const obrasSelecionadas = new Set();

        function addObra() {
            const select = document.getElementById("obraSelect");
            const selectedId = select.value;
            const selectedText = select.options[select.selectedIndex].text;

            if (!obrasSelecionadas.has(selectedId)) {
                obrasSelecionadas.add(selectedId);

                const ul = document.getElementById("obrasAdicionadas");
                const li = document.createElement("li");
                li.textContent = selectedText + " ";
                li.dataset.id = selectedId;

                const removeBtn = document.createElement("button");
                removeBtn.innerText = "❌";
                removeBtn.className = "btn btn-sm btn-danger ms-2";
                removeBtn.onclick = () => {
                    ul.removeChild(li);
                    obrasSelecionadas.delete(selectedId);
                    updateHiddenInput();
                };

                li.appendChild(removeBtn);
                ul.appendChild(li);
                updateHiddenInput();
            }
        }

        function updateHiddenInput() {
            document.getElementById("obraIdsInput").value = Array.from(obrasSelecionadas).join(',');
        }

        function filterObras() {
            const input = document.getElementById("searchInput").value.toLowerCase();
            const options = document.getElementById("obraSelect").options;
            for (let i = 0; i < options.length; i++) {
                const text = options[i].text.toLowerCase();
                options[i].style.display = text.includes(input) ? "" : "none";
            }
        }
    </script>
}
